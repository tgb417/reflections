What happens when you initialize a repository? Why do you need to do it?
	The system established the directory tree as a git repository by creating .git
	directory.

How is the staging area different from the working directory and the repository?
What value do you think it offers?
	The working directory holds all of the files and directories for the repository
		in the .git directory all of the older versions of the files are stored as 
		well.
	The Staging area is a logicial set of files that will be commited as a group to 
		the repository
	The Repository is the logical set of files that make up all of the files for
		the project.

How can you use the staging area to make sure you have one commit per logical
change?
	You need to stage all of the files for a particular change.  Once all of the files
	For the change asre staged, then we can actually go and commit the changes.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
	Experiment features.  Allow parrell development
	Features that are not ready for deployment, allows some development and us to wait.
	possilble custom versions of a particular produce for multiple clients.

How do the diagrams help you visualize the branch structure?

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?